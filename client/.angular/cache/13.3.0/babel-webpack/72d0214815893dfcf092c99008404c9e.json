{"ast":null,"code":"import '../jqwidgets/jqxcore';\nimport '../jqwidgets/jqxdata';\nimport '../jqwidgets/jqxtooltip';\nimport '../jqwidgets/jqxbulletchart';\nimport { EventEmitter, Component, ElementRef, Input, Output, NgModule } from '@angular/core'; /// <reference path=\"../../jqwidgets.d.ts\" />\n\nimport * as ɵngcc0 from '@angular/core';\nconst _c0 = [\"*\"];\nlet jqxBulletChartComponent = /*#__PURE__*/(() => {\n  class jqxBulletChartComponent {\n    constructor(containerElement) {\n      this.autoCreate = true;\n      this.properties = ['animationDuration', 'barSize', 'description', 'disabled', 'height', 'labelsFormat', 'labelsFormatFunction', 'orientation', 'pointer', 'rtl', 'ranges', 'showTooltip', 'target', 'ticks', 'title', 'tooltipFormatFunction', 'width']; // jqxBulletChartComponent events\n\n      this.onChange = new EventEmitter();\n      this.elementRef = containerElement;\n    }\n\n    ngOnInit() {\n      if (this.autoCreate) {\n        this.createComponent();\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (this.host) {\n        for (let i = 0; i < this.properties.length; i++) {\n          let attrName = 'attr' + this.properties[i].substring(0, 1).toUpperCase() + this.properties[i].substring(1);\n          let areEqual = false;\n\n          if (this[attrName] !== undefined) {\n            if (typeof this[attrName] === 'object') {\n              if (this[attrName] instanceof Array) {\n                areEqual = this.arraysEqual(this[attrName], this.host.jqxBulletChart(this.properties[i]));\n              }\n\n              if (areEqual) {\n                return false;\n              }\n\n              this.host.jqxBulletChart(this.properties[i], this[attrName]);\n              continue;\n            }\n\n            if (this[attrName] !== this.host.jqxBulletChart(this.properties[i])) {\n              this.host.jqxBulletChart(this.properties[i], this[attrName]);\n            }\n          }\n        }\n      }\n    }\n\n    arraysEqual(attrValue, hostValue) {\n      if (attrValue && !hostValue || !attrValue && hostValue) {\n        return false;\n      }\n\n      if (attrValue.length != hostValue.length) {\n        return false;\n      }\n\n      for (let i = 0; i < attrValue.length; i++) {\n        if (attrValue[i] !== hostValue[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    manageAttributes() {\n      let options = {};\n\n      for (let i = 0; i < this.properties.length; i++) {\n        let attrName = 'attr' + this.properties[i].substring(0, 1).toUpperCase() + this.properties[i].substring(1);\n\n        if (this[attrName] !== undefined) {\n          options[this.properties[i]] = this[attrName];\n        }\n      }\n\n      return options;\n    }\n\n    moveClasses(parentEl, childEl) {\n      let classes = parentEl.classList;\n\n      if (classes.length > 0) {\n        childEl.classList.add(...classes);\n      }\n\n      parentEl.className = '';\n    }\n\n    moveStyles(parentEl, childEl) {\n      let style = parentEl.style.cssText;\n      childEl.style.cssText = style;\n      parentEl.style.cssText = '';\n    }\n\n    createComponent(options) {\n      if (this.host) {\n        return;\n      }\n\n      if (options) {\n        JQXLite.extend(options, this.manageAttributes());\n      } else {\n        options = this.manageAttributes();\n      }\n\n      this.host = JQXLite(this.elementRef.nativeElement.firstChild);\n      this.moveClasses(this.elementRef.nativeElement, this.host[0]);\n      this.moveStyles(this.elementRef.nativeElement, this.host[0]);\n\n      this.__wireEvents__();\n\n      this.widgetObject = jqwidgets.createInstance(this.host, 'jqxBulletChart', options);\n    }\n\n    createWidget(options) {\n      this.createComponent(options);\n    }\n\n    __updateRect__() {\n      if (this.host) this.host.css({\n        width: this.attrWidth,\n        height: this.attrHeight\n      });\n    }\n\n    setOptions(options) {\n      this.host.jqxBulletChart('setOptions', options);\n    } // jqxBulletChartComponent properties\n\n\n    animationDuration(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('animationDuration', arg);\n      } else {\n        return this.host.jqxBulletChart('animationDuration');\n      }\n    }\n\n    barSize(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('barSize', arg);\n      } else {\n        return this.host.jqxBulletChart('barSize');\n      }\n    }\n\n    description(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('description', arg);\n      } else {\n        return this.host.jqxBulletChart('description');\n      }\n    }\n\n    disabled(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('disabled', arg);\n      } else {\n        return this.host.jqxBulletChart('disabled');\n      }\n    }\n\n    height(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('height', arg);\n      } else {\n        return this.host.jqxBulletChart('height');\n      }\n    }\n\n    labelsFormat(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('labelsFormat', arg);\n      } else {\n        return this.host.jqxBulletChart('labelsFormat');\n      }\n    }\n\n    labelsFormatFunction(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('labelsFormatFunction', arg);\n      } else {\n        return this.host.jqxBulletChart('labelsFormatFunction');\n      }\n    }\n\n    orientation(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('orientation', arg);\n      } else {\n        return this.host.jqxBulletChart('orientation');\n      }\n    }\n\n    pointer(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('pointer', arg);\n      } else {\n        return this.host.jqxBulletChart('pointer');\n      }\n    }\n\n    rtl(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('rtl', arg);\n      } else {\n        return this.host.jqxBulletChart('rtl');\n      }\n    }\n\n    ranges(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('ranges', arg);\n      } else {\n        return this.host.jqxBulletChart('ranges');\n      }\n    }\n\n    showTooltip(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('showTooltip', arg);\n      } else {\n        return this.host.jqxBulletChart('showTooltip');\n      }\n    }\n\n    target(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('target', arg);\n      } else {\n        return this.host.jqxBulletChart('target');\n      }\n    }\n\n    ticks(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('ticks', arg);\n      } else {\n        return this.host.jqxBulletChart('ticks');\n      }\n    }\n\n    title(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('title', arg);\n      } else {\n        return this.host.jqxBulletChart('title');\n      }\n    }\n\n    tooltipFormatFunction(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('tooltipFormatFunction', arg);\n      } else {\n        return this.host.jqxBulletChart('tooltipFormatFunction');\n      }\n    }\n\n    width(arg) {\n      if (arg !== undefined) {\n        this.host.jqxBulletChart('width', arg);\n      } else {\n        return this.host.jqxBulletChart('width');\n      }\n    } // jqxBulletChartComponent functions\n\n\n    destroy() {\n      this.host.jqxBulletChart('destroy');\n    }\n\n    render() {\n      this.host.jqxBulletChart('render');\n    }\n\n    refresh() {\n      this.host.jqxBulletChart('refresh');\n    }\n\n    val(value) {\n      if (value !== undefined) {\n        return this.host.jqxBulletChart('val', value);\n      } else {\n        return this.host.jqxBulletChart('val');\n      }\n    }\n\n    __wireEvents__() {\n      this.host.on('change', eventData => {\n        this.onChange.emit(eventData);\n      });\n    }\n\n  }\n\n  jqxBulletChartComponent.ɵfac = function jqxBulletChartComponent_Factory(t) {\n    return new (t || jqxBulletChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n\n  jqxBulletChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: jqxBulletChartComponent,\n    selectors: [[\"jqxBulletChart\"]],\n    inputs: {\n      autoCreate: [\"auto-create\", \"autoCreate\"],\n      attrAnimationDuration: [\"animationDuration\", \"attrAnimationDuration\"],\n      attrBarSize: [\"barSize\", \"attrBarSize\"],\n      attrDescription: [\"description\", \"attrDescription\"],\n      attrDisabled: [\"disabled\", \"attrDisabled\"],\n      attrLabelsFormat: [\"labelsFormat\", \"attrLabelsFormat\"],\n      attrLabelsFormatFunction: [\"labelsFormatFunction\", \"attrLabelsFormatFunction\"],\n      attrOrientation: [\"orientation\", \"attrOrientation\"],\n      attrPointer: [\"pointer\", \"attrPointer\"],\n      attrRtl: [\"rtl\", \"attrRtl\"],\n      attrRanges: [\"ranges\", \"attrRanges\"],\n      attrShowTooltip: [\"showTooltip\", \"attrShowTooltip\"],\n      attrTarget: [\"target\", \"attrTarget\"],\n      attrTicks: [\"ticks\", \"attrTicks\"],\n      attrTitle: [\"title\", \"attrTitle\"],\n      attrTooltipFormatFunction: [\"tooltipFormatFunction\", \"attrTooltipFormatFunction\"],\n      attrWidth: [\"width\", \"attrWidth\"],\n      attrHeight: [\"height\", \"attrHeight\"]\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    template: function jqxBulletChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\");\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return jqxBulletChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet jqxBulletChartModule = /*#__PURE__*/(() => {\n  class jqxBulletChartModule {}\n\n  jqxBulletChartModule.ɵfac = function jqxBulletChartModule_Factory(t) {\n    return new (t || jqxBulletChartModule)();\n  };\n\n  jqxBulletChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: jqxBulletChartModule\n  });\n  jqxBulletChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return jqxBulletChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(jqxBulletChartModule, {\n    declarations: [jqxBulletChartComponent],\n    exports: [jqxBulletChartComponent]\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { jqxBulletChartComponent, jqxBulletChartModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"module"}