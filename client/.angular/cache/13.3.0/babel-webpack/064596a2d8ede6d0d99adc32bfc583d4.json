{"ast":null,"code":"/*\r\njQWidgets v12.0.3 (2021-Apr)\r\nCopyright (c) 2011-2021 jQWidgets.\r\nLicense: https://jqwidgets.com/license/\r\n*/\n\n/* eslint-disable */\n(function (a) {\n  a.jqx.jqxWidget(\"jqxBulletChart\", \"\", {});\n  a.extend(a.jqx._jqxBulletChart.prototype, {\n    defineInstance: function () {\n      var b = {\n        width: 500,\n        height: 100,\n        barSize: \"50%\",\n        ranges: [{\n          startValue: 0,\n          endValue: 50,\n          color: \"#000000\",\n          opacity: 0.7\n        }, {\n          startValue: 50,\n          endValue: 80,\n          color: \"#000000\",\n          opacity: 0.5\n        }, {\n          startValue: 80,\n          endValue: 100,\n          color: \"#000000\",\n          opacity: 0.3\n        }],\n        pointer: {\n          value: 65,\n          label: \"Value\",\n          size: \"25%\",\n          color: \"\"\n        },\n        target: {\n          value: 85,\n          label: \"Target\",\n          size: 4,\n          color: \"\"\n        },\n        ticks: {\n          position: \"far\",\n          interval: 20,\n          size: 10\n        },\n        title: \"Title\",\n        description: \"Description\",\n        orientation: \"horizontal\",\n        labelsFormat: null,\n        labelsFormatFunction: null,\n        animationDuration: 400,\n        showTooltip: true,\n        tooltipFormatFunction: null,\n        disabled: false,\n        rtl: false,\n        events: [\"change\"]\n      };\n\n      if (this === a.jqx._jqxBulletChart.prototype) {\n        return b;\n      }\n\n      a.extend(true, this, b);\n      return b;\n    },\n    createInstance: function (b) {\n      if (!a.jqx.dataAdapter) {\n        throw new Error(\"jqxBulletChart: Missing reference to the following module: 'jqxdata.js'.\");\n      }\n\n      this._setDefaultValues();\n\n      this.render();\n      var c = this;\n      a.jqx.utilities.resize(this.host, function () {\n        if (c._timer) {\n          clearTimeout(c._timer);\n        }\n\n        c._timer = setTimeout(function () {\n          var d = c.animationDuration;\n          c.animationDuration = 0;\n          c.render();\n          setTimeout(function () {\n            c.animationDuration = d;\n          }, 0);\n        }, 10);\n      }, false, true);\n    },\n    render: function () {\n      if (this.host.children().length > 0) {\n        this._removeHandlers();\n\n        if (this.showTooltip == true) {\n          this.host.jqxTooltip(\"destroy\");\n        }\n\n        this.host.empty();\n      }\n\n      this.host.addClass(this.toThemeProperty(\"jqx-widget\"));\n      this.host.addClass(this.toThemeProperty(\"jqx-bulletchart\"));\n      this.host.width(this.width);\n      this.host.height(this.height);\n      var n = this.host.width();\n      var d = this.host.height();\n      var l;\n      var j = this.rtl ? \"rtl\" : \"ltr\";\n\n      if (this.orientation == \"horizontal\") {\n        l = a(\"<div style='position: absolute; visibility: hidden; padding: 5px;'><div class='\" + this.toThemeProperty(\"jqx-bulletchart-title\") + \"' style='direction: \" + j + \";'>\" + this.title + \"</div><div class='\" + this.toThemeProperty(\"jqx-bulletchart-description\") + \"' style='direction: \" + j + \";'>\" + this.description + \"</div></div>\");\n      } else {\n        if (this.orientation == \"vertical\") {\n          l = a(\"<div style='position: absolute; visibility: hidden; padding-bottom: 15px;'><div class='\" + this.toThemeProperty(\"jqx-bulletchart-title\") + \"' style='width: \" + n + \"px; direction: \" + j + \";'>\" + this.title + \"</div><div class='\" + this.toThemeProperty(\"jqx-bulletchart-description\") + \"' style='direction: \" + j + \";'>\" + this.description + \"</div></div>\");\n        }\n      }\n\n      this.host.append(l);\n      var k = l.outerWidth();\n      var g = l.outerHeight();\n      l.remove();\n      var e, h, i, b, o, m, f, c;\n\n      if (this.orientation == \"horizontal\") {\n        e = \"jqx-bulletchart-title-container-horizontal\";\n        h = \"jqx-bulletchart-chart-container-horizontal\";\n        i = this._checkPercentage(this.barSize, this.host);\n        b = k;\n        o = this.barSize;\n        m = 0;\n        f = n - b;\n        c = o;\n\n        if (this.width && this.width.toString().indexOf(\"%\") >= 0) {\n          var f = parseFloat(parseFloat(f * 100) / n).toString() + \"%\";\n          var b = parseFloat(parseFloat(b * 100) / n).toString() + \"%\";\n          this._percentageWidth = true;\n        }\n      } else {\n        if (this.orientation == \"vertical\") {\n          e = \"jqx-bulletchart-title-container-vertical\";\n          h = \"jqx-bulletchart-chart-container-vertical\";\n          i = 0;\n          b = \"100%\";\n          o = g;\n          m = this._checkPercentage(this.barSize, this.host);\n          f = this.barSize;\n          c = d - o;\n        }\n      }\n\n      if (this.rtl == false || this.rtl == true && this.orientation == \"vertical\") {\n        this.host.append(\"<div id='\" + this.element.id + \"titleContainer' class='\" + e + \"' style='top: \" + i + \";'></div>\");\n      }\n\n      this.host.append(\"<div id='\" + this.element.id + \"ChartContainer' class='\" + h + \"' style='top: \" + i + \"; left: \" + m + \";'></div>\");\n\n      if (this.rtl == true && this.orientation == \"horizontal\") {\n        this.host.append(\"<div id='\" + this.element.id + \"titleContainer' class='\" + e + \"' style='top: \" + i + \";'></div>\");\n      }\n\n      this._titleContainer = a(\"#\" + this.element.id + \"titleContainer\");\n      this._chartContainer = a(\"#\" + this.element.id + \"ChartContainer\");\n\n      this._titleContainer.css({\n        width: b,\n        height: o\n      });\n\n      this._chartContainer.css({\n        width: f,\n        height: c\n      });\n\n      this._min = this.ranges[0].startValue;\n      this._max = this.ranges[this.ranges.length - 1].endValue;\n      this._interval = this._max - this._min;\n      this._valueToPixelsHorizontal = this._chartContainer.width() / this._interval;\n      this._valueToPixelsVertical = this._chartContainer.height() / this._interval;\n\n      this._checkValues();\n\n      this._appendRanges();\n\n      this._appendPointerAndTarget();\n\n      this._appendTitleAndDescription();\n\n      if (this.ticks.position != \"none\") {\n        this._appendTicksAndLabels();\n      }\n\n      if (this.disabled == true) {\n        this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n      }\n\n      if (this.showTooltip == true) {\n        if (this.host.jqxTooltip != undefined) {\n          this._initializeTooltip();\n\n          this.host.data().jqxWidget = this;\n        } else {\n          throw new Error(\"jqxBulletChart: Missing reference to the following module: 'jqxtooltip.js'.\");\n        }\n      }\n\n      this._updateValue(this.pointer.value, 0, true);\n    },\n    refresh: function (b) {\n      if (!b) {\n        this.render();\n      }\n    },\n    val: function (b) {\n      if (arguments.length == 0 || b != null && typeof b == \"object\") {\n        return this.pointer.value;\n      } else {\n        if (b > this._max) {\n          b = this._max;\n        } else {\n          if (b < this._min) {\n            b = this._min;\n          }\n        }\n\n        if (b != this.pointer.value) {\n          this._updateValue(b, this.pointer.value);\n\n          this.pointer.value = b;\n\n          if (this.showTooltip == true) {\n            this._updateTooltip();\n          }\n        }\n      }\n    },\n    destroy: function () {\n      a.jqx.utilities.resize(this.host, null, true);\n\n      this._removeHandlers();\n\n      if (this.showTooltip == true) {\n        this.host.jqxTooltip(\"destroy\");\n      }\n\n      this.host.remove();\n    },\n    propertyChangedHandler: function (c, d, g, e) {\n      if (g != e || e instanceof Object) {\n        var b = true;\n\n        var f = function () {\n          a.each(g, function (i, h) {\n            if (e[i] == undefined) {\n              c[d][i] = h;\n            }\n          });\n        };\n\n        switch (d) {\n          case \"barSize\":\n            break;\n\n          case \"ranges\":\n            a.each(g, function (i, h) {\n              a.each(h, function (k, j) {\n                if (e[i] === undefined) {\n                  return;\n                }\n\n                if (e[i][k] == undefined) {\n                  c[d][i][k] = j;\n                }\n              });\n            });\n\n            this._setDefaultValues();\n\n            break;\n\n          case \"pointer\":\n            f();\n\n            this._updatePointer(e, g);\n\n            return;\n\n          case \"target\":\n            f();\n\n            this._updateTarget(e, g);\n\n            return;\n\n          case \"ticks\":\n            b = false;\n            f();\n            a.each(g, function (i, h) {\n              if (g[i] != c[d][i]) {\n                b = !(b && false);\n              }\n            });\n            break;\n\n          case \"showTooltip\":\n            if (e == true) {\n              if (this.host.jqxTooltip != undefined) {\n                this._initializeTooltip();\n              } else {\n                throw new Error(\"jqxBulletChart: Missing reference to the following module: 'jqxtooltip.js'.\");\n              }\n            } else {\n              this._removeHandlers();\n\n              this.host.jqxTooltip(\"destroy\");\n            }\n\n            break;\n\n          case \"animationDuration\":\n            return;\n\n          case \"tooltipFormatFunction\":\n            this._updateTooltip();\n\n            return;\n\n          case \"disabled\":\n            if (e == true) {\n              this.host.addClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n            } else {\n              this.host.removeClass(this.toThemeProperty(\"jqx-fill-state-disabled\"));\n            }\n\n            return;\n        }\n\n        if (b == true) {\n          this.render();\n        }\n      }\n    },\n    _raiseEvent: function (g, e) {\n      var c = this.events[g];\n      var f = new a.Event(c);\n      f.owner = this;\n      f.args = e;\n\n      try {\n        var b = this.host.trigger(f);\n      } catch (d) {}\n\n      return b;\n    },\n    _removeHandlers: function () {\n      var b = a(\"#\" + this.element.id + \"Pointer, #\" + this.element.id + \"Target\");\n      this.removeHandler(b, \"mouseenter.bulletchart\" + this.element.id);\n      this.removeHandler(b, \"mouseleave.bulletchart\" + this.element.id);\n    },\n    _setDefaultValues: function () {\n      var b = this.ranges;\n      var c = this.ranges.length;\n\n      for (var d = 0; d < c; d++) {\n        if (b[d].startValue == undefined || b[d].endValue == undefined) {\n          throw new Error(\"jqxBulletChart: Each range must have its startValue and endValue set.\");\n        }\n\n        if (b[d].color == undefined) {\n          this.ranges[d].color = \"#000000\";\n        }\n\n        if (b[d].opacity == undefined) {\n          this.ranges[d].opacity = 1 - 1 / c * d;\n        }\n      }\n\n      var g = this.pointer;\n\n      if (g.value == undefined) {\n        this.pointer.value = 65;\n      }\n\n      if (g.label == undefined) {\n        this.pointer.label = \"Value\";\n      }\n\n      if (g.size == undefined) {\n        this.pointer.size = \"25%\";\n      }\n\n      if (g.color == undefined) {\n        this.pointer.color = \"\";\n      }\n\n      var f = this.target;\n\n      if (f.value == undefined) {\n        this.target.value = 85;\n      }\n\n      if (f.label == undefined) {\n        this.target.label = \"Target\";\n      }\n\n      if (f.size == undefined) {\n        this.target.size = 5;\n      }\n\n      if (f.color == undefined) {\n        this.target.color = \"\";\n      }\n\n      var e = this.ticks;\n\n      if (e.position == undefined) {\n        this.ticks.position = \"near\";\n      }\n\n      if (e.interval == undefined) {\n        this.ticks.interval = 20;\n      }\n\n      if (e.size == undefined) {\n        this.ticks.size = 10;\n      }\n    },\n    _checkValues: function () {\n      if (this.pointer.value > this._max) {\n        this.pointer.value = this._max;\n      } else {\n        if (this.pointer.value < this._min) {\n          this.pointer.value = this._min;\n        }\n      }\n\n      if (this.target.value > this._max) {\n        this.target.value = this._max;\n      } else {\n        if (this.target.value < this._min) {\n          this.target.value = this._min;\n        }\n      }\n    },\n    _appendRanges: function () {\n      var e = \"\";\n      var g = this.ranges.length;\n\n      for (var d = 0; d < g; d++) {\n        var f = this.ranges[d];\n        var l;\n\n        if (this.orientation == \"horizontal\") {\n          var h = this.rtl ? \"right\" : \"left\";\n          var c = (f.startValue - this._min) * this._valueToPixelsHorizontal;\n          var j = (f.endValue - f.startValue) * this._valueToPixelsHorizontal;\n          l = \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-range\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-range-horizontal\") + \"' style='\" + h + \": \" + c + \"px; width: \" + j + \"px; background-color: \" + f.color + \"; opacity: \" + f.opacity + \"'></div>\";\n        } else {\n          if (this.orientation == \"vertical\") {\n            var b = (f.startValue - this._min) * this._valueToPixelsVertical;\n            var k = (f.endValue - f.startValue) * this._valueToPixelsVertical;\n            l = \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-range\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-range-vertical\") + \"' style='bottom: \" + b + \"px; height: \" + k + \"px; background-color: \" + f.color + \"; opacity: \" + f.opacity + \"'></div>\";\n          }\n        }\n\n        e += l;\n      }\n\n      this._chartContainer.append(e);\n    },\n    _appendPointerAndTarget: function () {\n      var o = \"\";\n      var m = this.element.id + \"Pointer\";\n      var f = this.element.id + \"Target\";\n      var l = this.pointer.size;\n      var k = this.target.value;\n      var e = this.target.size;\n      var j = k > 0 ? 0 : parseInt(e);\n      var p = this.pointer.color.length > 0 ? \"\" : this.toThemeProperty(\"jqx-fill-state-pressed\");\n      var g = this.target.color.length > 0 ? \"\" : this.toThemeProperty(\"jqx-fill-state-pressed\");\n\n      if (this.orientation == \"horizontal\") {\n        var c = this._normaliseValue(l);\n\n        var n = this._checkPercentage(l, this._chartContainer);\n\n        var d = this.rtl ? \"right\" : \"left\";\n        var t = (k - this._min) * this._valueToPixelsHorizontal - j;\n\n        var u = t + parseInt(e) - this._chartContainer.width();\n\n        if (t < 0) {\n          t = 0;\n        } else {\n          if (u > 0) {\n            t -= u;\n          }\n        }\n\n        var i = this._normaliseValue(e);\n\n        o += \"<div class='\" + g + \" \" + this.toThemeProperty(\"jqx-bulletchart-target\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-target-horizontal\") + \"' id='\" + f + \"' style='\" + d + \": \" + t + \"px; width: \" + i + \"; background-color: \" + this.target.color + \"'></div>\";\n        o += \"<div class='\" + p + \" \" + this.toThemeProperty(\"jqx-bulletchart-pointer\") + \"' id='\" + m + \"' style='top: \" + n + \"; height: \" + c + \"; background-color: \" + this.pointer.color + \"'></div>\";\n      } else {\n        if (this.orientation == \"vertical\") {\n          var r = this._chartContainer.width();\n\n          var q = this._normaliseValue(l);\n\n          var s = this._checkPercentage(l, this._chartContainer);\n\n          var b = (k - this._min) * this._valueToPixelsVertical - j;\n\n          var u = b + parseInt(e) - this._chartContainer.height();\n\n          if (b < 0) {\n            b = 0;\n          } else {\n            if (u > 0) {\n              b -= u;\n            }\n          }\n\n          var h = this._normaliseValue(e);\n\n          o += \"<div class='\" + g + \" \" + this.toThemeProperty(\"jqx-bulletchart-target\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-target-vertical\") + \"' id='\" + f + \"' style='bottom: \" + b + \"px; height: \" + h + \"; background-color: \" + this.target.color + \"'></div>\";\n          o += \"<div class='\" + p + \" \" + this.toThemeProperty(\"jqx-bulletchart-pointer\") + \"' id='\" + m + \"' style='left: \" + s + \"; width: \" + q + \"; background-color: \" + this.pointer.color + \"'></div>\";\n        }\n      }\n\n      this._chartContainer.append(o);\n    },\n    _updatePointer: function (c, i) {\n      var h = a(\"#\" + this.element.id + \"Pointer\");\n\n      if (c.value > this._max) {\n        this.pointer.value = this._max;\n      } else {\n        if (c.value < this._min) {\n          this.pointer.value = this._min;\n        }\n      }\n\n      if (c.value != i.value) {\n        this._updateValue(c.value, i.value);\n\n        if (this.showTooltip == true) {\n          this._updateTooltip();\n        }\n      }\n\n      if (c.label != i.label) {\n        if (this.showTooltip == true) {\n          this._updateTooltip();\n        }\n      }\n\n      if (c.size != i.size) {\n        var d = c.size;\n\n        if (this.orientation == \"horizontal\") {\n          var g = this._checkPercentage(d, this._chartContainer);\n\n          var b = this._normaliseValue(d);\n\n          h.css({\n            top: g,\n            height: b\n          });\n        } else {\n          if (this.orientation == \"vertical\") {\n            var f = this._checkPercentage(d, this._chartContainer);\n\n            var e = this._normaliseValue(d);\n\n            h.css({\n              left: f,\n              width: e\n            });\n          }\n        }\n      }\n\n      if (c.color != i.color) {\n        if (c.color == \"\") {\n          h.css(\"background-color\", \"\");\n          h.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n        } else {\n          h.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n          h.css(\"background-color\", c.color);\n        }\n      }\n    },\n    _updateTarget: function (b, d) {\n      var e = a(\"#\" + this.element.id + \"Target\");\n\n      if (b.value > this._max) {\n        this.target.value = this._max;\n      } else {\n        if (b.value < this._min) {\n          this.target.value = this._min;\n        }\n      }\n\n      if (b.value != d.value || b.size != d.size) {\n        var h = b.value;\n        var k = parseInt(b.size);\n        var c = h > 0 ? 0 : k;\n\n        if (this.orientation == \"horizontal\") {\n          var i = this.rtl ? \"right\" : \"left\";\n          var j = (h - this._min) * this._valueToPixelsHorizontal - c;\n\n          var g = j + k - this._chartContainer.width();\n\n          if (j < 0) {\n            j = 0;\n          } else {\n            if (g > 0) {\n              j -= g;\n            }\n          }\n\n          if (this.rtl == false) {\n            e.css(\"left\", j);\n          } else {\n            e.css(\"right\", j);\n          }\n\n          e.width(k);\n        } else {\n          if (this.orientation == \"vertical\") {\n            var f = (h - this._min) * this._valueToPixelsVertical - c;\n\n            var g = f + k - this._chartContainer.height();\n\n            if (f < 0) {\n              f = 0;\n            } else {\n              if (g > 0) {\n                f -= g;\n              }\n            }\n\n            e.css({\n              bottom: f,\n              height: k\n            });\n          }\n        }\n\n        if (this.showTooltip == true) {\n          this._updateTooltip();\n        }\n      }\n\n      if (b.label != d.label) {\n        if (this.showTooltip == true) {\n          this._updateTooltip();\n        }\n      }\n\n      if (b.color != d.color) {\n        if (b.color == \"\") {\n          e.css(\"background-color\", \"\");\n          e.addClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n        } else {\n          e.removeClass(this.toThemeProperty(\"jqx-fill-state-pressed\"));\n          e.css(\"background-color\", b.color);\n        }\n      }\n    },\n    _appendTitleAndDescription: function () {\n      var d;\n\n      if (this.orientation == \"horizontal\") {\n        if (this.rtl == true) {\n          d = this.toThemeProperty(\"jqx-bulletchart-title-description-rtl\");\n        } else {\n          d = this.toThemeProperty(\"jqx-bulletchart-title-description-ltr\");\n        }\n      } else {\n        d = this.toThemeProperty(\"jqx-bulletchart-title-description-vertical\");\n      }\n\n      var g = this.rtl ? \"rtl\" : \"ltr\";\n      var b = \"<div id='\" + this.element.id + \"Title' class='\" + this.toThemeProperty(\"jqx-bulletchart-title\") + \" \" + d + \"' style='direction: \" + g + \";'>\" + this.title + \"</div><div id='\" + this.element.id + \"Description' class='\" + this.toThemeProperty(\"jqx-bulletchart-description\") + \" \" + d + \"' style='direction: \" + g + \";'>\" + this.description + \"</div>\";\n      var e = a(\"<div style='position: absolute; visibility: hidden;'>\" + b + \"</div>\");\n\n      this._titleContainer.append(e);\n\n      var h = e.children();\n      var c = a(h[0]).height() + a(h[1]).height();\n      e.remove();\n      var f;\n\n      if (this.orientation == \"horizontal\") {\n        if (this.rtl == false) {\n          f = this.toThemeProperty(\"jqx-bulletchart-title-inner-container\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-title-inner-container-ltr\");\n        } else {\n          f = this.toThemeProperty(\"jqx-bulletchart-title-inner-container\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-title-inner-container-rtl\");\n        }\n      } else {\n        f = \"\";\n      }\n\n      this._titleContainer.append(\"<div class='\" + f + \"' style='height: \" + c + \"px;'>\" + b + \"</div>\");\n    },\n    _appendTicksAndLabels: function () {\n      var o = a(\"<div style='position: absolute; visibility: hidden;'></div>\");\n\n      this._chartContainer.append(o);\n\n      var j = \"\";\n      var e = this._min < 0 ? true : false;\n      var b = this.ticks.size;\n\n      if (this.orientation == \"horizontal\") {\n        var k = this._titleContainer.width();\n\n        var r = this._chartContainer.offset().top - this.host.offset().top;\n\n        if (this.ticks.position == \"both\" || this.ticks.position == \"far\") {\n          var l = this._chartContainer.height() + r;\n        }\n\n        for (var h = 0; h <= this._interval; h += this.ticks.interval) {\n          var c = h * this._valueToPixelsHorizontal + k;\n\n          if (h + this.ticks.interval > this._interval) {\n            c -= 1;\n          }\n\n          if (e) {\n            var d = h + this._min == 0 ? true : false;\n\n            if (d) {\n              j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-horizontal\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-zero-tick\") + \"' style='top: \" + r + \"px; \" + m + \": \" + c + \"px; height: \" + this._chartContainer.height() + \"px;'></div>\";\n              e = false;\n            }\n          }\n\n          var n = this._labelValue(h);\n\n          o.html(n);\n          var p = c - o.width() / 2;\n          var m = this.rtl ? \"right\" : \"left\";\n\n          if (this.ticks.position == \"both\" || this.ticks.position == \"far\") {\n            j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-horizontal\") + \"' style='top: \" + l + \"px; \" + m + \": \" + c + \"px; height: \" + b + \"px;'></div>\";\n            j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-labels\") + \"' style='top: \" + (l + b + 2) + \"px; \" + m + \": \" + p + \"px;'>\" + n + \"</div>\";\n          }\n\n          if (this.ticks.position == \"both\" || this.ticks.position == \"near\") {\n            j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-horizontal\") + \"' style='top: \" + (r - b) + \"px; \" + m + \": \" + c + \"px; height: \" + b + \"px;'></div>\";\n            j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-labels\") + \"' style='top: \" + (r - (b + o.height() + 2)) + \"px; \" + m + \": \" + p + \"px;'>\" + n + \"</div>\";\n          }\n        }\n      } else {\n        if (this.orientation == \"vertical\") {\n          var g = this._chartContainer.offset().left - this.host.offset().left;\n\n          if (this.ticks.position == \"both\" || this.ticks.position == \"far\") {\n            var q = this._chartContainer.width();\n          }\n\n          for (var h = 0; h <= this._interval; h += this.ticks.interval) {\n            var f = h * this._valueToPixelsVertical;\n\n            if (h + this.ticks.interval > this._interval) {\n              f -= 1;\n            }\n\n            if (e) {\n              var d = h + this._min == 0 ? true : false;\n\n              if (d) {\n                j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-vertical\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-zero-tick\") + \"' style='left: \" + g + \"px; bottom: \" + f + \"px; width: \" + q + \"px;'></div>\";\n                e = false;\n              }\n            }\n\n            if (this.ticks.position == \"both\" || this.ticks.position == \"near\") {\n              j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-vertical\") + \"' style='left: \" + (g - b) + \"px; bottom: \" + f + \"px; width: \" + b + \"px;'></div>\";\n\n              var n = this._labelValue(h, \"near\");\n\n              o.html(n);\n              var p = o.height() / 2 - 1;\n              j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-labels\") + \"' style='left: \" + (g - (b + o.width() + 2)) + \"px; bottom: \" + (f - p) + \"px;'>\" + n + \"</div>\";\n            }\n\n            if (this.ticks.position == \"both\" || this.ticks.position == \"far\") {\n              j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-ticks\") + \" \" + this.toThemeProperty(\"jqx-bulletchart-ticks-vertical\") + \"' style='left: \" + (q + g) + \"px; bottom: \" + f + \"px; width: \" + b + \"px;'></div>\";\n\n              var n = this._labelValue(h, \"far\");\n\n              o.html(n);\n              var p = o.height() / 2 - 1;\n              j += \"<div class='\" + this.toThemeProperty(\"jqx-bulletchart-labels\") + \"' style='left: \" + (q + g + b + 2) + \"px; bottom: \" + (f - p) + \"px;'>\" + n + \"</div>\";\n            }\n          }\n        }\n      }\n\n      this.host.append(j);\n      o.remove();\n    },\n    _labelValue: function (d, b) {\n      var e = d + this._min;\n      var c;\n\n      if (this.labelsFormatFunction) {\n        c = this.labelsFormatFunction(e, b);\n      } else {\n        c = a.jqx.dataFormat.formatnumber(e, this.labelsFormat);\n      }\n\n      return c;\n    },\n    _initializeTooltip: function () {\n      var c = this;\n\n      var d = this._tooltipContent();\n\n      this.host.jqxTooltip({\n        theme: this.theme,\n        position: \"mouse\",\n        content: d,\n        trigger: \"none\",\n        autoHide: false,\n        rtl: this.rtl\n      });\n      this.host.jqxTooltip(\"getInstance\").val = a.proxy(this.val, this);\n      var b = a(\"#\" + this.element.id + \"Pointer, #\" + this.element.id + \"Target\");\n      this.addHandler(b, \"mouseenter.bulletchart\" + this.element.id, function (e) {\n        if (c.disabled == false) {\n          c.host.jqxTooltip(\"open\", e.pageX, e.pageY);\n\n          if (e.target.id == c.element.id + \"Pointer\" && c.pointer.color == \"\" || e.target.id == c.element.id + \"Target\" && c.target.color == \"\") {\n            a(e.target).removeClass(c.toThemeProperty(\"jqx-fill-state-pressed\"));\n            a(e.target).addClass(c.toThemeProperty(\"jqx-fill-state-hover\"));\n          }\n        }\n      });\n      this.addHandler(b, \"mouseleave.bulletchart\" + this.element.id, function (e) {\n        if (c.disabled == false) {\n          c.host.jqxTooltip(\"close\");\n\n          if (e.target.id == c.element.id + \"Pointer\" && c.pointer.color == \"\" || e.target.id == c.element.id + \"Target\" && c.target.color == \"\") {\n            a(e.target).removeClass(c.toThemeProperty(\"jqx-fill-state-hover\"));\n            a(e.target).addClass(c.toThemeProperty(\"jqx-fill-state-pressed\"));\n          }\n        }\n      });\n    },\n    _updateTooltip: function () {\n      this.host.jqxTooltip({\n        content: this._tooltipContent()\n      });\n    },\n    _tooltipContent: function () {\n      var c;\n\n      if (this.tooltipFormatFunction) {\n        c = this.tooltipFormatFunction(this.pointer.value, this.target.value);\n      } else {\n        var b = a.jqx.dataFormat.formatnumber(this.pointer.value, this.labelsFormat);\n        var d = a.jqx.dataFormat.formatnumber(this.target.value, this.labelsFormat);\n        c = \"<div>\" + this.pointer.label + \": \" + b + \"</div><div>\" + this.target.label + \": \" + d + \"</div>\";\n      }\n\n      return c;\n    },\n    _updateValue: function (m, d, k) {\n      var j = this;\n      var c = a(\"#\" + this.element.id + \"Pointer\");\n      var g, h, l, n;\n\n      var f = function (p, r, q) {\n        if (j._min >= 0) {\n          if (p == \"vertical\") {\n            c.css(\"bottom\", 0);\n          } else {\n            if (j.rtl == true && p == \"horizontal\") {\n              c.css(\"right\", 0);\n            }\n          }\n\n          g = (m - j._min) * r;\n        } else {\n          if (m >= 0) {\n            if (p == \"horizontal\") {\n              if (j.rtl == true) {\n                h = \"right\";\n                l = \"left\";\n              } else {\n                h = \"left\";\n              }\n            } else {\n              if (p == \"vertical\") {\n                h = \"bottom\";\n                l = \"top\";\n              }\n            }\n\n            var o = -j._min * r;\n          } else {\n            if (p == \"horizontal\") {\n              if (j.rtl == true) {\n                h = \"left\";\n              } else {\n                h = \"right\";\n                l = \"left\";\n              }\n            } else {\n              if (p == \"vertical\") {\n                h = \"top\";\n              }\n            }\n\n            var o = q + j._min * r;\n          }\n\n          c.css(h, o);\n\n          if (l) {\n            c.css(l, \"\");\n          }\n\n          if (m * d < 0) {\n            if (p == \"horizontal\") {\n              c.width(0);\n            } else {\n              if (p == \"vertical\") {\n                c.height(0);\n              }\n            }\n          }\n\n          g = Math.abs(m * r);\n        }\n\n        return g;\n      };\n\n      var i = function () {\n        if (!k) {\n          j._raiseEvent(\"0\");\n        }\n      };\n\n      if (this.orientation == \"horizontal\") {\n        var e = f(\"horizontal\", this._valueToPixelsHorizontal, this._chartContainer.width());\n        setTimeout(function () {\n          c.animate({\n            width: e\n          }, j.animationDuration, i);\n        }, 0);\n      } else {\n        if (this.orientation == \"vertical\") {\n          var b = f(\"vertical\", this._valueToPixelsVertical, this._chartContainer.height());\n          setTimeout(function () {\n            c.animate({\n              height: b\n            }, j.animationDuration, i);\n          }, 0);\n        }\n      }\n    },\n    _checkPercentage: function (f, d) {\n      var c = -1;\n\n      if (f.indexOf) {\n        c = f.indexOf(\"%\");\n      }\n\n      var g = function (h) {\n        if (!f.indexOf || f.indexOf(\"px\") == -1) {\n          return h;\n        } else {\n          return parseFloat(h.slice(0, f.indexOf(\"px\")));\n        }\n      };\n\n      var e = function (h) {\n        return parseFloat(h.slice(0, c));\n      };\n\n      if (c == -1) {\n        var b;\n\n        if (this.orientation == \"horizontal\") {\n          b = d.height();\n        } else {\n          if (this.orientation == \"vertical\") {\n            b = d.width();\n          }\n        }\n\n        return (b - g(f)) / 2 + \"px\";\n      } else {\n        return (100 - e(f)) / 2 + \"%\";\n      }\n    },\n    _normaliseValue: function (b) {\n      if (!b.indexOf || b.indexOf(\"px\") == -1 && b.indexOf(\"%\") == -1) {\n        return b + \"px\";\n      } else {\n        return b;\n      }\n    }\n  });\n})(jqxBaseFramework);","map":null,"metadata":{},"sourceType":"script"}